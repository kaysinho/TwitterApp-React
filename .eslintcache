[{"/Users/userguest/Desktop/twitterapp/src/index.tsx":"1","/Users/userguest/Desktop/twitterapp/src/TwitterApp.tsx":"2","/Users/userguest/Desktop/twitterapp/src/components/twit-card/TwitCard.tsx":"3","/Users/userguest/Desktop/twitterapp/src/components/input-search/InputSearch.tsx":"4","/Users/userguest/Desktop/twitterapp/src/components/twitter-button/TweetButton.tsx":"5"},{"size":253,"mtime":1612647507562,"results":"6","hashOfConfig":"7"},{"size":1089,"mtime":1612647725009,"results":"8","hashOfConfig":"7"},{"size":3057,"mtime":1610934813535,"results":"9","hashOfConfig":"7"},{"size":236,"mtime":1610921187689,"results":"10","hashOfConfig":"7"},{"size":471,"mtime":1612649708014,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"h28gwg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/userguest/Desktop/twitterapp/src/index.tsx",["27"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { TwitterApp } from './TwitterApp';\nimport TwitterLogin from \"react-twitter-login\";\n\n\nReactDOM.render(\n    <TwitterApp />,\n  document.getElementById('root')\n);\n\n\n",["28","29"],"/Users/userguest/Desktop/twitterapp/src/TwitterApp.tsx",["30"],"import React, { useState } from 'react'\nimport { TwitCard } from './components/twit-card/TwitCard';\nimport { InputSearch } from './components/input-search/InputSearch';\nimport TweetButton from './components/twitter-button/TweetButton';\n\n export const TwitterApp = () => {\n\n    const [twits, setTwits] = useState<string[]> (['Jhonatan',  'Carolaine', 'Janina', 'Alvarito', 'Kay', 'Ruth', 'Diana', 'Isaac']);\n\n    const getTwits = async()=>{\n        const url=\"\";\n        const resp = await fetch(url);\n        const data = await resp.json();\n        console.log(data);\n    }\n\n    getTwits();\n\n    return (\n        <div>\n            <div className=\"input-container\">\n                <InputSearch />\n                <TweetButton />\n            </div>\n            <div className=\"row container\">\n                    {\n                        twits.map( twit => {\n                            return <div className=\"col-sm-4\" data-align=\"center\" key={ twit + '_col' }> <TwitCard twit= { twit } /></div>\n                        })\n                    }\n            </div>\n        </div>\n\n    )\n}\n","/Users/userguest/Desktop/twitterapp/src/components/twit-card/TwitCard.tsx",["31","32","33","34"],"import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport logo from '../../assets/images/twitter.png'\n\nexport const TwitCard = ( props: any) => {\n\n    const  [twit, settwit] = useState<string>(\"\");\n\n    const [showMore, setShowmore] = useState<boolean>(false);\n    const handleShowMore = ()=>{\n      setShowmore(!showMore);\n      console.log(props.twit, showMore)\n    }\n\n    return (\n        <div className=\"card\">\n          <div className=\"white-card\">\n            <div className=\"profile-section\">\n              <img\n                className=\"avatar\"\n                src=\"https://thenewcode.com/assets/images/thumbnails/sarah-parmenter.jpeg\"\n              />\n              <div className=\"info\">\n                <h5 className=\"name\"> { props.twit }</h5>\n                <p className=\"user\">@tuitero</p>\n              </div>\n            </div>\n            <hr />\n            <div className=\"twit-section\">\n              <p className=\"twit-text\">Lorem Ipsum is simpl...</p>\n            </div>\n            <hr />\n            <div className=\"icon-section\">\n              <div className=\"action-button\">\n                <i className=\"material-icons\">reply</i>\n              </div>\n              <div className=\"action-button\">\n                <i className=\"material-icons\">repeat</i>\n              </div>\n              <div className=\"action-button\">\n                <i className=\"material-icons\">grade</i>\n              </div>\n            </div>\n          </div>\n          <div className=\"show-more-box\">\n            <div className=\"blue-circle\"></div>\n            <div className=\"blue-card\">\n            {(() => {\n                  if (showMore) {\n                    return               <div className=\"twit-section\" id=\"1\">\n                    <hr />\n                    <p className=\"twit-text\">10:07 AM - 10 Apr 21</p>\n                    <hr />\n                    <p className=\"twit-text\">\n                      Lorem Ipsum is simply dummy text of the printing and\n                      typesetting industry. Lorem Ipsum has been the industry's\n                      standard dummy text ever since the 1500s, when an unknown\n                      printer took a galley of type and scrambled it to make a type\n                      specimen book.\n                    </p>\n                  </div>;\n                  } \n                })()}\n\n              <div className=\"action-link\">\n                {(() => {\n                  if (showMore) {\n                    return <div className=\"more\" id=\"3\" onClick={ handleShowMore } > <i className=\"material-icons\">keyboard_arrow_up</i> </div>;\n                  } else {\n                    return <div className=\"more\" id=\"2\" onClick={ handleShowMore }> ... m√°s <i className=\"material-icons\">keyboard_arrow_down</i> </div>;\n                  }\n                })()}\n                \n\n              </div>\n            </div>\n            <img className=\"twit-icon\" src= {logo} />\n          </div>\n        </div>\n    )\n}\n\nTwitCard.propTypes = {\n    twit  : PropTypes.any.isRequired\n}","/Users/userguest/Desktop/twitterapp/src/components/input-search/InputSearch.tsx",[],"/Users/userguest/Desktop/twitterapp/src/components/twitter-button/TweetButton.tsx",["35"],"import React from \"react\";\nimport TwitterLogin from \"react-twitter-login\";\n \nexport default (props:any) => {\n  const authHandler = (err:any, data:any) => {\n    console.log(err, data);\n  };\n\n  const CONSUMER_SECRET = \"0hJ5bx4vuKJSCjzzS15de5ERYpAL2vDrPoYy9j9gcdw9efG9jR\";\n  const CONSUMER_KEY = \"ZgkW7ZIcnTLaK9XGOiDZ1Fd0z\"\n \n  return (\n    <TwitterLogin\n      authCallback={authHandler}\n      consumerKey={CONSUMER_KEY}\n      consumerSecret={CONSUMER_SECRET}\n    />\n  );\n};",{"ruleId":"36","severity":1,"message":"37","line":5,"column":8,"nodeType":"38","messageId":"39","endLine":5,"endColumn":20},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"36","severity":1,"message":"44","line":8,"column":19,"nodeType":"38","messageId":"39","endLine":8,"endColumn":27},{"ruleId":"36","severity":1,"message":"45","line":7,"column":13,"nodeType":"38","messageId":"39","endLine":7,"endColumn":17},{"ruleId":"36","severity":1,"message":"46","line":7,"column":19,"nodeType":"38","messageId":"39","endLine":7,"endColumn":26},{"ruleId":"47","severity":1,"message":"48","line":19,"column":15,"nodeType":"49","endLine":22,"endColumn":17},{"ruleId":"47","severity":1,"message":"48","line":77,"column":13,"nodeType":"49","endLine":77,"endColumn":54},{"ruleId":"50","severity":1,"message":"51","line":4,"column":1,"nodeType":"52","endLine":19,"endColumn":3},"@typescript-eslint/no-unused-vars","'TwitterLogin' is defined but never used.","Identifier","unusedVar","no-native-reassign",["53"],"no-negated-in-lhs",["54"],"'setTwits' is assigned a value but never used.","'twit' is assigned a value but never used.","'settwit' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]